// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PRISMA_ACCELERATE_URL")
}

model User {
  id               String             @id @default(uuid())
  name             String
  email            String             @unique
  password         String
  imageUrl         String?
  imagePath        String?
  Transaction      Transaction[]
  Category         Category[]
  PushSubscription PushSubscription[]
  Goal             Goal[]

  @@map("users")
}

enum TransactionType {
  INCOME
  EXPENSE
}

model Transaction {
  id          String          @id @default(uuid())
  description String
  amount      Float
  type        TransactionType
  date        DateTime        @default(now())
  userId      String
  categoryId  String?
  goalId      String?
  user        User            @relation(fields: [userId], references: [id])
  goal        Goal?           @relation(fields: [goalId], references: [id])
  category    Category?       @relation(fields: [categoryId], references: [id])

  @@map("transactions")
}

model Category {
  id     String          @id @default(uuid())
  name   String
  userId String
  type   TransactionType

  user        User          @relation(fields: [userId], references: [id])
  Transaction Transaction[]

  @@map("categories")
}

model Goal {
  id           String        @id @default(uuid())
  name         String
  description  String?
  targetAmount Float
  savedAmount  Float         @default(0)
  deadline     DateTime?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  userId       String
  user         User          @relation(fields: [userId], references: [id])
  transaction  Transaction[]

  @@map("goals")
}

model PushSubscription {
  id        String   @id @default(cuid())
  userId    String
  endpoint  String
  p256dh    String
  auth      String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])

  @@index([userId])
  @@map("push_subscriptions")
}
